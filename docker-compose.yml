version: '3.8'
services:
  nest_js:
    build:
      context: ./Random_Chat
    container_name: Random_Chat
    ports:
      - "3006:3006"   # REST API
      - "3001:3001"   # WebSocket
    depends_on:
      - postgres  # Ensure NestJS waits for PostgreSQL to be ready
    networks:
      - app-network
    volumes:
      - ./Random_Chat/secrets:/app/secrets
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASS: postgres
      DB_NAME: random_chat_db
      NODE_ENV: production

  next_js:
    build:
      context: ./random_chat_front  # Ensure this path points to the correct directory
      target: production
    container_name: random_chat_front
    ports:
      - "3000:3000"
    networks:
      - app-network
    volumes:
      - ./random_chat_front:/app
    command: ["npx", "next", "start"]
    environment:
      - NODE_ENV = production
      - NEXT_PUBLIC_API_URL =  https://nginx/api  # NGINX as the endpoint for REST API
      - NEXT_PUBLIC_API_URL_SOCKET = ws://nginx/ws  # NGINX as the WebSocket endpoint


  postgres:
    image: postgres:16
    container_name: postgres-db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: random_chat_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    container_name: nginx-server
    ports:
      - "80:80"   # HTTP
      - "443:443" # HTTPS
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl/self-signed.crt:/etc/nginx/certificate.crt
      - ./ssl/self-signed.key:/etc/nginx/private.key
    depends_on:
      - nest_js
      - next_js
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
