events {}

http {
    # Upstream for Next.js
    upstream next_js {
        server 172.18.0.1:3000;  # Replace with the actual Next.js container IP and port
    }

    # Upstream for NestJS API
    upstream nest_js_api {
        server Random_Chat:3006;  # Replace with the actual NestJS container name or IP and port
    }

    # Upstream for NestJS WebSocket
    upstream nest_js_ws {
        server Random_Chat:3001;  # Replace with the actual NestJS WebSocket container name or IP and port
    }

    # Redirect all HTTP traffic to HTTPS
    server {
        listen 80;
        server_name 172.18.0.1;  # Replace with your domain or use a wildcard like "_"

        return 301 https://$host$request_uri;
    }

    # HTTPS server block
    server {
        listen 443 ssl;
        server_name 172.18.0.1;  # Replace with your domain or IP

        # SSL Certificates
        ssl_certificate      /etc/nginx/certificate.crt;
        ssl_certificate_key  /etc/nginx/private.key;

        ssl_protocols        TLSv1.2 TLSv1.3;
        ssl_ciphers          HIGH:!aNULL:!MD5;

        # Proxy requests to Next.js frontend
        location / {
            proxy_pass http://next_js;  # Next.js handles non-API routes
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
        location /next_api/ {
            rewrite ^/next_api/(.*)$ /$1 break;  # Remove /next_api/ prefix before forwarding
            proxy_pass http://next_js;  # Forward to Next.js backend API
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        # Proxy requests with `/api/` prefix to the NestJS backend API
        location /api/ {
            # Remove the `/api` prefix before forwarding the request
            rewrite ^/api/(.*)$ /$1 break;

            # Forward to the NestJS API upstream
            proxy_pass http://nest_js_api;
            proxy_http_version 1.1;

            # Set appropriate headers
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        # Proxy WebSocket requests with `/ws/` prefix to the NestJS WebSocket server
        location /ws/ {
            # Remove the `/ws` prefix before forwarding the request
            rewrite ^/ws/(.*)$ /$1 break;

            # Forward to the WebSocket upstream
            proxy_pass http://nest_js_ws;
            proxy_http_version 1.1;

            # Ensure WebSocket headers are set correctly
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
    }
}
